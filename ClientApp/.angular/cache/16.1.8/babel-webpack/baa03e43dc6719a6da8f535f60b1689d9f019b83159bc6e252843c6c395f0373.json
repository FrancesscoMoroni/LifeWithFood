{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/button\";\nexport class LoginPageComponent {\n  constructor(formBuilder, http, baseUrl) {\n    this.formBuilder = formBuilder;\n    this.loginForm = this.formBuilder.group({\n      login: '',\n      password: ''\n    });\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n  onSubmit() {\n    console.warn('Your order has been submitted', this.loginForm.value);\n    this.http.post(this.baseUrl + \"/\", \"\");\n  }\n}\n_class = LoginPageComponent;\n_class.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login-page\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"login-form\"], [\"appearance\", \"fill\"], [\"id\", \"login\", \"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Login\", \"formControlName\", \"login\"], [\"id\", \"password\", \"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Has\\u0142o\", \"formControlName\", \"password\"], [\"mat-raised-button\", \"\", \"type\", \"submit\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"login-page works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"mat-form-field\", 2)(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n      i0.ɵɵtext(10, \"Has\\u0142o\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"button\", 5);\n      i0.ɵɵtext(13, \"Zaloguj\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i3.MatFormField, i3.MatLabel, i4.MatInput, i5.MatButton, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".login-form[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.login-button[_ngcontent-%COMP%] {\\r\\n    color: black !important;\\r\\n}\\r\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4tcGFnZS9sb2dpbi1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksdUJBQXVCO0FBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWZvcm0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5sb2dpbi1idXR0b24ge1xyXG4gICAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["LoginPageComponent","constructor","formBuilder","http","baseUrl","loginForm","group","login","password","onSubmit","console","warn","value","post","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginPageComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["E:\\Pliki do programowania\\Projekty\\LifeWithFood\\ClientApp\\src\\app\\login-page\\login-page.component.ts","E:\\Pliki do programowania\\Projekty\\LifeWithFood\\ClientApp\\src\\app\\login-page\\login-page.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n  private http: HttpClient;\n  private baseUrl: string;\n\n  loginForm = this.formBuilder.group({\n    login: '',\n    password: ''\n  });\n\n  constructor(private formBuilder: FormBuilder, http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n  } \n\n  onSubmit(): void {\n    console.warn('Your order has been submitted', this.loginForm.value);\n    this.http.post(this.baseUrl + \"/\", \"\");\n  }\n}\n","<p>login-page works!</p>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"login-form\">\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Login</mat-label>\n      <input id=\"login\" type=\"text\" matInput placeholder=\"Login\" formControlName=\"login\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Hasło</mat-label>\n      <input id=\"password\" type=\"password\" matInput placeholder=\"Hasło\" formControlName=\"password\">\n    </mat-form-field>\n  </div>\n  <button mat-raised-button type=\"submit\">Zaloguj</button>\n</form> \n\n\n"],"mappings":";;;;;;;AASA,OAAM,MAAOA,kBAAkB;EAS7BC,YAAoBC,WAAwB,EAAEC,IAAgB,EAAsBC,OAAe;IAA/E,KAAAF,WAAW,GAAXA,WAAW;IAL/B,KAAAG,SAAS,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACjCC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX,CAAC;IAGA,IAAI,CAACL,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;EACxB;EAEAK,QAAQA,CAAA;IACNC,OAAO,CAACC,IAAI,CAAC,+BAA+B,EAAE,IAAI,CAACN,SAAS,CAACO,KAAK,CAAC;IACnE,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,OAAO,GAAG,GAAG,EAAE,EAAE,CAAC;EACxC;;SAjBWJ,kBAAkB;;mBAAlBA,MAAkB,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAS2C,UAAU;AAAA;;QATvEf,MAAkB;EAAAoB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT/BZ,EAAA,CAAAc,cAAA,QAAG;MAAAd,EAAA,CAAAe,MAAA,wBAAiB;MAAAf,EAAA,CAAAgB,YAAA,EAAI;MACxBhB,EAAA,CAAAc,cAAA,cAAsD;MAAxBd,EAAA,CAAAiB,UAAA,sBAAAC,qDAAA;QAAA,OAAYL,GAAA,CAAAlB,QAAA,EAAU;MAAA,EAAC;MACnDK,EAAA,CAAAc,cAAA,aAAwB;MAETd,EAAA,CAAAe,MAAA,YAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAY;MAC5BhB,EAAA,CAAAmB,SAAA,eAAmF;MACrFnB,EAAA,CAAAgB,YAAA,EAAiB;MACjBhB,EAAA,CAAAc,cAAA,wBAAkC;MACrBd,EAAA,CAAAe,MAAA,kBAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAY;MAC5BhB,EAAA,CAAAmB,SAAA,gBAA6F;MAC/FnB,EAAA,CAAAgB,YAAA,EAAiB;MAEnBhB,EAAA,CAAAc,cAAA,iBAAwC;MAAAd,EAAA,CAAAe,MAAA,eAAO;MAAAf,EAAA,CAAAgB,YAAA,EAAS;;;MAXpDhB,EAAA,CAAAoB,SAAA,GAAuB;MAAvBpB,EAAA,CAAAqB,UAAA,cAAAR,GAAA,CAAAtB,SAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}